<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFramework>netstandard2.1</TargetFramework>
		<LangVersion>13</LangVersion>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<RootNamespace>NorthwoodLib</RootNamespace>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<DebugType>portable</DebugType>
		<Deterministic>true</Deterministic>

		<AssemblyName>NorthwoodLib</AssemblyName>
		<Product>NorthwoodLib</Product>
		<PackageId>NorthwoodLib</PackageId>
		<Description>NorthwoodLib</Description>
		<Company>Hubert Moszka Northwood</Company>
		<Authors>Hubert Moszka Northwood</Authors>
		<Copyright>Hubert Moszka Northwood, 2020-2025</Copyright>

		<NoWarn>EPC12;ERP022</NoWarn>
	</PropertyGroup>

	<PropertyGroup>
		<!-- Disable automatic generation of version attribute -->
		<GenerateAssemblyInformationalVersionAttribute>false</GenerateAssemblyInformationalVersionAttribute>
		<GenerateAssemblyFileVersionAttribute>false</GenerateAssemblyFileVersionAttribute>
		<GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>
	</PropertyGroup>

	<ItemGroup>
		<AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
			<_Parameter1>$(AssemblyName).Tests</_Parameter1>
		</AssemblyAttribute>
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="9.0.8" />
		<PackageReference Include="System.Collections.Immutable" Version="9.0.4" />
		<PackageReference Include="System.IO.Pipelines" Version="9.0.4" />
		<PackageReference Include="System.Text.Encodings.Web" Version="9.0.4" />
		<PackageReference Include="System.Text.Json" Version="9.0.4" />
		<PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="6.1.2" />
		<PackageReference Include="zabszk.DnsClient" Version="1.0.1" />
		<PackageReference Include="BouncyCastle.Cryptography" Version="2.5.1" />
		<PackageReference Include="ZXing.Net" Version="0.16.10" />
		<PackageReference Include="PolySharp" Version="1.15.0">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="9.0.0">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.Unity.Analyzers" Version="1.22.0">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
		<PackageReference Include="ErrorProne.NET.CoreAnalyzers" Version="0.7.0-beta.1">
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		  <PrivateAssets>all</PrivateAssets>
		</PackageReference>
		<PackageReference Include="ErrorProne.NET.Structs" Version="0.6.1-beta.1">
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		  <PrivateAssets>all</PrivateAssets>
		</PackageReference>
	</ItemGroup>

	<PropertyGroup>
		<PolySharpUsePublicAccessibilityForGeneratedTypes>true</PolySharpUsePublicAccessibilityForGeneratedTypes>
	</PropertyGroup>

	<Target Name="CopyReferenceFilesBuild" BeforeTargets="Build">
		<ItemGroup>
			<ReferenceFiles Include="%(Reference.RelativeDir)%(Reference.Filename).xml;%(Reference.RelativeDir)%(Reference.Filename).pdb" Exclude="%(Reference.RelativeDir)netstandard.xml" />
		</ItemGroup>
		<Message Text="Copying reference files to $(OutputPath)" Importance="High" />
		<Copy SourceFiles="@(ReferenceFiles)" DestinationFolder="$(OutputPath)" Condition="Exists('%(RootDir)%(Directory)%(Filename)%(Extension)')" />
	</Target>

	<Target Name="CopyReferenceFilesPublish" BeforeTargets="Publish">
		<ItemGroup>
			<ReferenceFiles Include="%(Reference.RelativeDir)%(Reference.Filename).xml;%(Reference.RelativeDir)%(Reference.Filename).pdb" Exclude="%(Reference.RelativeDir)netstandard.xml" />
		</ItemGroup>
		<Message Text="Copying reference files to $(PublishDir)" Importance="High" />
		<Copy SourceFiles="@(ReferenceFiles)" DestinationFolder="$(PublishDir)" Condition="Exists('%(RootDir)%(Directory)%(Filename)%(Extension)')" />
	</Target>
</Project>
